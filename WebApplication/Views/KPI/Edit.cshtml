@model KPI
@{
    var KPI = (ViewBag.KPI as KPI) ?? Model.KP1;
}

<div class="form-group">
    @Html.LabelFor(model => model.MucTieu, "Mục tiêu", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.MucTieu, new { @class = "form-control", required = true, rows = 3 })
        @Html.ValidationMessageFor(model => model.MucTieu, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.TyTrong, "Tỷ trọng", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="input-group">
            @Html.EditorFor(model => model.TyTrong, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">%</span>
        </div>
        @Html.ValidationMessageFor(model => model.TyTrong, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ChiTieu, "Chỉ tiêu", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ChiTieu, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ChiTieu, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DonViTinh, "Đơn vị tính", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.DonViTinh, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DonViTinh, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GhiChu, "Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.GhiChu, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Email, "Giao cho", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @if (ViewBag.Names is SelectList)
        {
            @Html.DropDownList("Email", ViewBag.Names as SelectList, new { @class = "form-control" })
        }
        else
        {
            var names = ViewBag.Names as MultiSelectList;
            @Html.ListBox("Emails", names, new { @class = "form-control", size = names.Count() })
        }
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
</div>

@if (KPI.ChiTieu > 0)
{
    <script>
        var chiTieu = @KPI.ChiTieu;
        document.addEventListener('DOMContentLoaded', function (event) {
            //$('#TyTrong').attr('readonly', true);
            $('#ChiTieu').keyup(function () {
                //$('#TyTrong').val(Math.round($(this).val() * 100 / chiTieu));
            });
        });
    </script>
}

<style>
    .autogrow-mirror { display: none; }
</style>

<script>
    window.onload = (event) => {
        $('textarea').autogrow().keyup();
    };
</script>